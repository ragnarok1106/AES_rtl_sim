$date
    Aug 10, 2012  23:31:23
$end
$version
    TOOL:	ncsim	08.20-p001
$end
$timescale
    10 ps
$end

$scope module tb_keyexp $end
$var reg       1 !    clk  $end
$var reg       1 "    rst_n  $end
$var reg      128 #    key_in [127:0] $end
$var reg       1 $    start_in  $end
$var reg       1 %    en_de  $end
$var reg       4 &    round_in [3:0] $end
$var wire     128 '    key_out [127:0] $end
$var wire      1 (    ready_out  $end
$var parameter 48 )    DUMP_FILE  $end

$scope module overall_ke $end
$var wire      1 *    clk  $end
$var wire      1 +    rst_n  $end
$var wire     128 ,    key_in [127:0] $end
$var wire      1 -    start_in  $end
$var wire      1 .    en_de  $end
$var wire      4 /    round_in [3:0] $end
$var wire     128 '    key_out [127:0] $end
$var wire      1 (    ready_out  $end
$var wire      8 0    sbox_in [7:0] $end
$var wire      8 1    sbox_out [7:0] $end
$var wire      1 2    ce  $end
$var wire      1 3    re  $end

$scope module aes_keyexp $end
$var wire      1 *    clk  $end
$var wire      1 +    rst_n  $end
$var wire     128 ,    key_in [127:0] $end
$var wire      8 1    sbox_out [7:0] $end
$var wire      4 /    round_in [3:0] $end
$var reg      128 4    key_out [127:0] $end
$var reg       8 5    sbox_in [7:0] $end
$var reg       1 6    sbox_en_de_in  $end
$var reg       1 7    ce  $end
$var reg       1 8    re  $end
$var reg       1 9    ready_out  $end
$var wire      1 -    start_in  $end
$var wire      1 .    en_de  $end
$var reg      128 :    nxt_key_out [127:0] $end
$var reg      128 ;    key_temp [127:0] $end
$var reg       1 <    nxt_ready_out  $end
$var reg       3 =    ctn [2:0] $end
$var reg       3 >    nxt_ctn [2:0] $end
$var reg       8 ?    rcon [7:0] $end
$var reg      32 @    col_t [31:0] $end
$upscope $end


$scope module aes_sbox2 $end
$var wire      1 *    clk  $end
$var wire      8 0    addr [7:0] $end
$var wire      1 2    chip_en  $end
$var wire      1 3    read_en  $end
$var reg       8 A    data [7:0] $end
$var reg       8 B    data_t [7:0] $end
$upscope $end

$upscope $end

$upscope $end


$scope module transform_aes $end
$var wire      1 C    clk  $end
$var wire      1 D    rst_n  $end
$var wire     128 E    data_in [127:0] $end
$var wire     128 F    key_in [127:0] $end
$var wire      4 G    round_in [3:0] $end
$var wire     128 H    data_out [127:0] $end
$var wire      1 I    sub_ready_out  $end
$var wire      1 J    colmix_ready_out  $end
$var wire      1 K    start_in  $end
$var wire      1 L    en_de  $end
$var wire      1 M    sub_start_in  $end
$var wire      1 N    colmix_start_in  $end
$var wire     128 O    colmix_data_in [127:0] $end
$var wire     128 P    addroundkey_in [127:0] $end

$scope module subbyte_t $end
$var wire      1 C    clk  $end
$var wire      1 D    rst_n  $end
$var wire     128 H    data_in [127:0] $end
$var wire      1 M    start_in  $end
$var wire      1 L    en_de  $end
$var wire     128 O    data_out [127:0] $end
$var wire      1 M    ready_out  $end
$var wire      8 Q    sbox_in [7:0] $end
$var wire      8 R    sbox_out [7:0] $end
$var wire      1 S    ce  $end
$var wire      1 T    re  $end

$scope module aes_subbyte $end
$var wire      1 C    clk  $end
$var wire      1 D    rst_n  $end
$var wire     128 H    data_in [127:0] $end
$var wire      8 R    sbox_out [7:0] $end
$var reg      128 U    data_out [127:0] $end
$var reg       8 V    sbox_in [7:0] $end
$var reg       1 W    sbox_en_de_in  $end
$var reg       1 X    ce  $end
$var reg       1 Y    re  $end
$var reg       1 Z    ready_out  $end
$var wire      1 M    start_in  $end
$var wire      1 L    en_de  $end
$var reg      128 [    nxt_data_out [127:0] $end
$var reg      128 \    data_temp [127:0] $end
$var reg       1 ]    nxt_ready_out  $end
$var reg       5 ^    ctn [4:0] $end
$var reg       5 _    nxt_ctn [4:0] $end
$upscope $end


$scope module aes_sbox $end
$var wire      1 C    clk  $end
$var wire      8 Q    addr [7:0] $end
$var wire      1 S    chip_en  $end
$var wire      1 T    read_en  $end
$var reg       8 `    data [7:0] $end
$var reg       8 a    data_t [7:0] $end
$upscope $end

$upscope $end


$scope module columnmix_t $end
$var wire      1 C    clk  $end
$var wire      1 D    rst_n  $end
$var wire     128 O    data_in [127:0] $end
$var reg      128 b    data_out [127:0] $end
$var reg       1 c    ready_out  $end
$var wire      1 N    start_in  $end
$var wire      1 L    en_de  $end
$var wire     32 d    en_col_out [31:0] $end
$var wire     32 e    de_col_out [31:0] $end
$var wire     32 f    new_col_final [31:0] $end
$var wire     32 g    wm_in [31:0] $end
$var reg      128 h    nxt_data_out [127:0] $end
$var reg       2 i    ctn [1:0] $end
$var reg       2 j    nxt_ctn [1:0] $end
$var reg       1 k    nxt_ready_out  $end
$var reg      32 l    old_col_in [31:0] $end

$scope module wordmixcol1 $end
$var wire     32 g    col_in [31:0] $end
$var wire     32 d    en_new_out [31:0] $end
$var wire     32 e    de_new_out [31:0] $end
$var wire      8 m    a [7:0] $end
$var wire      8 n    b [7:0] $end
$var wire      8 o    c [7:0] $end
$var wire      8 p    d [7:0] $end
$var wire      8 q    en_byte1 [7:0] $end
$var wire      8 r    en_byte2 [7:0] $end
$var wire      8 s    en_byte3 [7:0] $end
$var wire      8 t    en_byte4 [7:0] $end
$var wire      8 u    de_byte1 [7:0] $end
$var wire      8 v    de_byte2 [7:0] $end
$var wire      8 w    de_byte3 [7:0] $end
$var wire      8 x    de_byte4 [7:0] $end

$scope module bytemixcol1 $end
$var wire      8 m    a [7:0] $end
$var wire      8 n    b [7:0] $end
$var wire      8 o    c [7:0] $end
$var wire      8 p    d [7:0] $end
$var wire      8 q    en_new_out [7:0] $end
$var wire      8 u    de_new_out [7:0] $end
$var wire      8 y    w1 [7:0] $end
$var wire      8 z    w2 [7:0] $end
$var wire      8 {    w3 [7:0] $end
$var wire      8 |    w4 [7:0] $end
$var wire      8 }    w5 [7:0] $end
$var wire      8 ~    w6 [7:0] $end
$var wire      8 !!   w7 [7:0] $end
$var wire      8 "!   w8 [7:0] $end

$scope module xtime1 $end
$var wire      8 y    byte_in [7:0] $end
$var wire      8 |    byte_out [7:0] $end
$var wire      4 #!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime2 $end
$var wire      8 {    byte_in [7:0] $end
$var wire      8 }    byte_out [7:0] $end
$var wire      4 $!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime3 $end
$var wire      8 ~    byte_in [7:0] $end
$var wire      8 !!   byte_out [7:0] $end
$var wire      4 %!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime4 $end
$var wire      8 !!   byte_in [7:0] $end
$var wire      8 "!   byte_out [7:0] $end
$var wire      4 &!   xtime_temp [3:0] $end
$upscope $end

$upscope $end


$scope module bytemixcol2 $end
$var wire      8 n    a [7:0] $end
$var wire      8 o    b [7:0] $end
$var wire      8 p    c [7:0] $end
$var wire      8 m    d [7:0] $end
$var wire      8 r    en_new_out [7:0] $end
$var wire      8 v    de_new_out [7:0] $end
$var wire      8 '!   w1 [7:0] $end
$var wire      8 (!   w2 [7:0] $end
$var wire      8 )!   w3 [7:0] $end
$var wire      8 *!   w4 [7:0] $end
$var wire      8 +!   w5 [7:0] $end
$var wire      8 ,!   w6 [7:0] $end
$var wire      8 -!   w7 [7:0] $end
$var wire      8 .!   w8 [7:0] $end

$scope module xtime1 $end
$var wire      8 '!   byte_in [7:0] $end
$var wire      8 *!   byte_out [7:0] $end
$var wire      4 /!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime2 $end
$var wire      8 )!   byte_in [7:0] $end
$var wire      8 +!   byte_out [7:0] $end
$var wire      4 0!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime3 $end
$var wire      8 ,!   byte_in [7:0] $end
$var wire      8 -!   byte_out [7:0] $end
$var wire      4 1!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime4 $end
$var wire      8 -!   byte_in [7:0] $end
$var wire      8 .!   byte_out [7:0] $end
$var wire      4 2!   xtime_temp [3:0] $end
$upscope $end

$upscope $end


$scope module bytemixcol3 $end
$var wire      8 o    a [7:0] $end
$var wire      8 p    b [7:0] $end
$var wire      8 m    c [7:0] $end
$var wire      8 n    d [7:0] $end
$var wire      8 s    en_new_out [7:0] $end
$var wire      8 w    de_new_out [7:0] $end
$var wire      8 3!   w1 [7:0] $end
$var wire      8 4!   w2 [7:0] $end
$var wire      8 5!   w3 [7:0] $end
$var wire      8 6!   w4 [7:0] $end
$var wire      8 7!   w5 [7:0] $end
$var wire      8 8!   w6 [7:0] $end
$var wire      8 9!   w7 [7:0] $end
$var wire      8 :!   w8 [7:0] $end

$scope module xtime1 $end
$var wire      8 3!   byte_in [7:0] $end
$var wire      8 6!   byte_out [7:0] $end
$var wire      4 ;!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime2 $end
$var wire      8 5!   byte_in [7:0] $end
$var wire      8 7!   byte_out [7:0] $end
$var wire      4 <!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime3 $end
$var wire      8 8!   byte_in [7:0] $end
$var wire      8 9!   byte_out [7:0] $end
$var wire      4 =!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime4 $end
$var wire      8 9!   byte_in [7:0] $end
$var wire      8 :!   byte_out [7:0] $end
$var wire      4 >!   xtime_temp [3:0] $end
$upscope $end

$upscope $end


$scope module bytemixcol4 $end
$var wire      8 p    a [7:0] $end
$var wire      8 m    b [7:0] $end
$var wire      8 n    c [7:0] $end
$var wire      8 o    d [7:0] $end
$var wire      8 t    en_new_out [7:0] $end
$var wire      8 x    de_new_out [7:0] $end
$var wire      8 ?!   w1 [7:0] $end
$var wire      8 @!   w2 [7:0] $end
$var wire      8 A!   w3 [7:0] $end
$var wire      8 B!   w4 [7:0] $end
$var wire      8 C!   w5 [7:0] $end
$var wire      8 D!   w6 [7:0] $end
$var wire      8 E!   w7 [7:0] $end
$var wire      8 F!   w8 [7:0] $end

$scope module xtime1 $end
$var wire      8 ?!   byte_in [7:0] $end
$var wire      8 B!   byte_out [7:0] $end
$var wire      4 G!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime2 $end
$var wire      8 A!   byte_in [7:0] $end
$var wire      8 C!   byte_out [7:0] $end
$var wire      4 H!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime3 $end
$var wire      8 D!   byte_in [7:0] $end
$var wire      8 E!   byte_out [7:0] $end
$var wire      4 I!   xtime_temp [3:0] $end
$upscope $end


$scope module xtime4 $end
$var wire      8 E!   byte_in [7:0] $end
$var wire      8 F!   byte_out [7:0] $end
$var wire      4 J!   xtime_temp [3:0] $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end


$scope module addroundkey_t $end
$var wire     128 E    ori_data_in [127:0] $end
$var wire     128 P    new_data_in [127:0] $end
$var wire     128 F    key_in [127:0] $end
$var wire      4 G    round_in [3:0] $end
$var wire     128 H    data_out [127:0] $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b11101000110001000101110011101100110001101100100 )
0!
1"
bx #
0$
1%
bx &
bx '
x(
0*
1+
bx ,
0-
1.
bx /
b0 0
bx 1
02
03
bx 4
b0 5
x6
07
08
x9
b0 :
bx ;
0<
bx =
bx >
bx ?
bx @
bx A
b1100011 B
zC
zD
bz E
bz F
bz G
bx H
zI
xJ
zK
zL
xM
zN
bx O
bx P
b0 Q
bx R
0S
0T
bx U
b0 V
xW
0X
0Y
xZ
b0 [
bx \
0]
bx ^
b0 _
bx `
b1100011 a
bx b
xc
b0 d
b0 e
b0 f
b0 g
bx h
bx i
b0 j
0k
b0 l
b0 m
b0 n
b0 o
b0 p
b0 q
b0 r
b0 s
b0 t
b0 u
b0 v
b0 w
b0 x
b0 y
b0 z
b0 {
b0 |
b0 }
b0 ~
b0 !!
b0 "!
b0 #!
b0 $!
b0 %!
b0 &!
b0 '!
b0 (!
b0 )!
b0 *!
b0 +!
b0 ,!
b0 -!
b0 .!
b0 /!
b0 0!
b0 1!
b0 2!
b0 3!
b0 4!
b0 5!
b0 6!
b0 7!
b0 8!
b0 9!
b0 :!
b0 ;!
b0 <!
b0 =!
b0 >!
b0 ?!
b0 @!
b0 A!
b0 B!
b0 C!
b0 D!
b0 E!
b0 F!
b0 G!
b0 H!
b0 I!
b0 J!
$end
#500
1!
0"
0+
1*
b0 4
09
b0 =
b0 @
17
18
b0 >
13
12
0(
b0 '
#1000
0!
1"
1+
0*
b1100011 A
b1100011 1
#1500
1!
b101011001010001010101100001001011111101010111011110111110011110001010111010010000101010100111100010110101001101000100000111100 #
b101011001010001010101100001001011111101010111011110111110011110001010111010010000101010100111100010110101001101000100000111100 ,
1*
07
08
17
18
#2000
0!
0*
#2500
b1 &
1!
1*
b1 /
b1 ?
#3000
0!
0*
#3500
1$
1!
1*
1-
07
08
b1001 5
17
18
b1 >
b1001 0
b1 B
#4000
0!
0*
b1 A
b1 1
#4500
0$
1!
1*
0-
07
08
b0 5
17
18
b0 >
b0 0
b1100011 B
b1 =
07
08
b11001111 5
b1 @
17
18
b10 >
b11001111 0
b10001010 B
#5000
0!
0*
b10001010 A
b10001010 1
#5500
1!
1*
b10 =
07
08
b0 5
b1001111 5
b10001010000000000000000000000001 @
17
18
b11 >
b1001111 0
b10000100 B
#6000
0!
0*
b10000100 A
b10000100 1
#6500
1!
1*
b11 =
07
08
b0 5
b111100 5
b10001010100001000000000000000001 @
17
18
b100 >
b111100 0
b11101011 B
#7000
0!
0*
b11101011 A
b11101011 1
#7500
1!
1*
b100 =
07
08
b0 5
b10001010100001001110101100000001 @
b10100000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ;
b10100000xxxxxxxxxxxxxxxxxxxxxxxx11111010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ;
b10100000xxxxxxxxxxxxxxxxxxxxxxxx11111010xxxxxxxxxxxxxxxxxxxxxxxx11111110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ;
b10100000xxxxxxxxxxxxxxxxxxxxxxxx11111010xxxxxxxxxxxxxxxxxxxxxxxx11111110xxxxxxxxxxxxxxxxxxxxxxxx00010111xxxxxxxxxxxxxxxxxxxxxxxx ;
b1010000010001000xxxxxxxxxxxxxxxx11111010xxxxxxxxxxxxxxxxxxxxxxxx11111110xxxxxxxxxxxxxxxxxxxxxxxx00010111xxxxxxxxxxxxxxxxxxxxxxxx ;
b1010000010001000xxxxxxxxxxxxxxxx1111101001010100xxxxxxxxxxxxxxxx11111110xxxxxxxxxxxxxxxxxxxxxxxx00010111xxxxxxxxxxxxxxxxxxxxxxxx ;
b1010000010001000xxxxxxxxxxxxxxxx1111101001010100xxxxxxxxxxxxxxxx1111111000101100xxxxxxxxxxxxxxxx00010111xxxxxxxxxxxxxxxxxxxxxxxx ;
b1010000010001000xxxxxxxxxxxxxxxx1111101001010100xxxxxxxxxxxxxxxx1111111000101100xxxxxxxxxxxxxxxx0001011110110001xxxxxxxxxxxxxxxx ;
b101000001000100000100011xxxxxxxx1111101001010100xxxxxxxxxxxxxxxx1111111000101100xxxxxxxxxxxxxxxx0001011110110001xxxxxxxxxxxxxxxx ;
b101000001000100000100011xxxxxxxx111110100101010010100011xxxxxxxx1111111000101100xxxxxxxxxxxxxxxx0001011110110001xxxxxxxxxxxxxxxx ;
b101000001000100000100011xxxxxxxx111110100101010010100011xxxxxxxx111111100010110000111001xxxxxxxx0001011110110001xxxxxxxxxxxxxxxx ;
b101000001000100000100011xxxxxxxx111110100101010010100011xxxxxxxx111111100010110000111001xxxxxxxx000101111011000100111001xxxxxxxx ;
b10100000100010000010001100101010111110100101010010100011xxxxxxxx111111100010110000111001xxxxxxxx000101111011000100111001xxxxxxxx ;
b1010000010001000001000110010101011111010010101001010001101101100111111100010110000111001xxxxxxxx000101111011000100111001xxxxxxxx ;
b101000001000100000100011001010101111101001010100101000110110110011111110001011000011100101110110000101111011000100111001xxxxxxxx ;
b10100000100010000010001100101010111110100101010010100011011011001111111000101100001110010111011000010111101100010011100100000101 ;
1<
b0 >
b10100000100010000010001100101010111110100101010010100011011011001111111000101100001110010111011000010111101100010011100100000101 :
b0 0
03
02
b1100011 B
#8000
0!
0*
b1100011 A
b1100011 1
#8500
1!
1*
b10100000100010000010001100101010111110100101010010100011011011001111111000101100001110010111011000010111101100010011100100000101 4
19
b0 =
b0 :
0<
17
18
13
12
1(
b10100000100010000010001100101010111110100101010010100011011011001111111000101100001110010111011000010111101100010011100100000101 '
#9000
0!
0*
#9500
1!
1*
b0 4
09
0(
b0 '
#10000
0!
0*
#10500
1!
1*
#11000
0!
0*
#11500
1!
1*
#12000
0!
0*
#12500
1!
1*
#13000
0!
0*
#13500
1!
1*
#14000
0!
0*
#14500
1!
1*
#15000
0!
0*
#15500
1!
1*
#16000
0!
0*
#16500
1!
1*
#17000
0!
0*
#17500
1!
1*
#18000
0!
0*
#18500
1!
1*
#19000
0!
0*
#19500
1!
1*
#20000
0!
0*
#20500
1!
1*
#21000
0!
0*
#21500
1!
1*
#22000
0!
0*
#22500
1!
1*
#23000
0!
0*
#23500
1!
1*
#24000
0!
0*
#24500
1!
1*
#25000
0!
0*
#25500
1!
1*
#26000
0!
0*
#26500
1!
1*
#27000
0!
0*
#27500
1!
1*
#28000
0!
0*
#28500
1!
1*
#29000
0!
0*
#29500
1!
1*
#30000
0!
0*
#30500
1!
1*
#31000
0!
0*
#31500
1!
1*
#32000
0!
0*
#32500
1!
1*
#33000
0!
0*
#33500
1!
1*
#34000
0!
0*
#34500
1!
1*
#35000
0!
0*
#35500
1!
1*
#36000
0!
0*
#36500
1!
1*
#37000
0!
0*
#37500
1!
1*
#38000
0!
0*
#38500
1!
1*
#39000
0!
0*
#39500
1!
1*
#40000
0!
0*
#40500
1!
1*
#41000
0!
0*
#41500
1!
1*
#42000
0!
0*
#42500
1!
1*
#43000
0!
0*
#43500
1!
1*
#44000
0!
0*
#44500
1!
1*
#45000
0!
0*
#45500
1!
1*
#46000
0!
0*
#46500
1!
1*
#47000
0!
0*
#47500
1!
1*
#48000
0!
0*
#48500
1!
1*
#49000
0!
0*
#49500
1!
1*
#50000
0!
0*
#50500
1!
1*
#51000
0!
0*
#51500
1!
1*
#52000
0!
0*
#52500
1!
1*
#53000
0!
0*
#53500
1!
1*
#54000
0!
0*
#54500
1!
1*
#55000
0!
0*
#55500
1!
1*
#56000
0!
0*
#56500
1!
1*
#57000
0!
0*
#57500
1!
1*
#58000
0!
0*
#58500
1!
1*
#59000
0!
0*
#59500
1!
1*
#60000
0!
0*
#60500
1!
1*
#61000
0!
0*
#61500
1!
1*
#62000
0!
0*
#62500
1!
1*
#63000
0!
0*
#63500
1!
1*
#64000
0!
0*
#64500
1!
1*
#65000
0!
0*
#65500
1!
1*
#66000
0!
0*
#66500
1!
1*
#67000
0!
0*
#67500
1!
1*
#68000
0!
0*
#68500
1!
1*
#69000
0!
0*
#69500
1!
1*
#70000
0!
0*
#70500
1!
1*
#71000
0!
0*
#71500
1!
1*
#72000
0!
0*
#72500
1!
1*
#73000
0!
0*
#73500
1!
1*
#74000
0!
0*
#74500
1!
1*
#75000
0!
0*
#75500
1!
1*
#76000
0!
0*
#76500
1!
1*
#77000
0!
0*
#77500
1!
1*
#78000
0!
0*
#78500
1!
1*
#79000
0!
0*
#79500
1!
1*
#80000
0!
0*
#80500
1!
1*
#81000
0!
0*
#81500
1!
1*
#82000
0!
0*
#82500
1!
1*
#83000
0!
0*
#83500
1!
1*
#84000
0!
0*
#84500
1!
1*
#85000
0!
0*
#85500
1!
1*
#86000
0!
0*
#86500
1!
1*
#87000
0!
0*
#87500
1!
1*
#88000
0!
0*
#88500
1!
1*
#89000
0!
0*
#89500
1!
1*
#90000
0!
0*
#90500
1!
1*
#91000
0!
0*
#91500
1!
1*
#92000
0!
0*
#92500
1!
1*
#93000
0!
0*
#93500
1!
1*
#94000
0!
0*
#94500
1!
1*
#95000
0!
0*
#95500
1!
1*
#96000
0!
0*
#96500
1!
1*
#97000
0!
0*
#97500
1!
1*
#98000
0!
0*
#98500
1!
1*
#99000
0!
0*
#99500
1!
1*
#100000
0!
0*
#100500
1!
1*
#101000
0!
0*
#101500
1!
1*
#102000
0!
0*
#102500
1!
1*
#103000
0!
0*
#103500
1!
1*
#104000
0!
0*
#104500
